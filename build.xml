<project name="LightningWebComponentTrails" default="test" basedir="."
  xmlns:sf="antlib:com.salesforce">

  <property file="build.properties"/>
  <property environment="env"/>

  <!-- Shows deploying code & running tests for code in directory -->
  <target name="myPersonalDeployCode">
    <!-- Upload the contents of the "codepkg" directory, running the tests for just 1 class -->
    <sf:deploy username="${sf.username}" password="${sf.password}" serverurl="${sf.serverurl}" maxPoll="${sf.maxPoll}" deployRoot="force-app" testLevel="NoTestRun" rollbackOnError="true">
    </sf:deploy>
  </target>

  <!-- Deploy the unpackaged set of metadata retrieved with retrieveUnpackaged and run tests in this organization's namespace only-->
  <target name="deployUnpackaged">
    <sf:deploy username="${sf.username}" password="${sf.password}" serverurl="${sf.serverurl}" testlevel="NoTestRun" logtype="Detail" deployRoot="force-app"/>
  </target>

  <!-- Deploy a zip of metadata files to the org -->
  <target name="deployZip">
    <sf:deploy username="${sf.username}" password="${sf.password}" sessionId="${sf.sessionId}" serverurl="${sf.serverurl}" maxPoll="${sf.maxPoll}" zipFile="${sf.zipFile}" pollWaitMillis="1000" rollbackOnError="true"/>
  </target>

  <!-- Shows deploying code & running tests for code in directory -->
  <target name="deployCode">
    <!-- Upload the contents of the "codepkg" directory, running the tests for just 1 class -->
    <sf:deploy username="${sf.username}" password="${sf.password}" sessionId="${sf.sessionId}" serverurl="${sf.serverurl}" maxPoll="${sf.maxPoll}" deployRoot="codepkg" testLevel="RunSpecifiedTests" rollbackOnError="true">
      <runTest>SampleDeployClass</runTest>
    </sf:deploy>
  </target>

  <!-- Shows deploying code with no TestLevel sepcified -->
  <target name="deployCodeNoTestLevelSpecified">
    <sf:deploy username="${sf.username}" password="${sf.password}" sessionId="${sf.sessionId}" serverurl="${sf.serverurl}" maxPoll="${sf.maxPoll}" deployRoot="codepkg" rollbackOnError="true"/>
  </target>

  <!-- Shows deploying code and running tests only within the org namespace -->
  <target name="deployCodeRunLocalTests">
    <sf:deploy username="${sf.username}" password="${sf.password}" sessionId="${sf.sessionId}" serverurl="${sf.serverurl}" maxPoll="${sf.maxPoll}" deployRoot="codepkg" rollbackOnError="true" testlevel="RunLocalTests"/>
  </target>

  <!-- Shows removing code; only succeeds if done after deployCode -->
  <target name="undeployCode">
    <sf:deploy username="${sf.username}" password="${sf.password}" sessionId="${sf.sessionId}" serverurl="${sf.serverurl}" maxPoll="${sf.maxPoll}" deployRoot="removecodepkg"/>
  </target>

  <!-- Shows retrieving code; only succeeds if done after deployCode -->
  <target name="retrieveCode">
    <!-- Retrieve the contents listed in the file codepkg/package.xml into the codepkg directory -->
    <sf:retrieve username="${sf.username}" password="${sf.password}" sessionId="${sf.sessionId}" serverurl="${sf.serverurl}" maxPoll="${sf.maxPoll}" retrieveTarget="codepkg" unpackaged="codepkg/package.xml"/>
  </target>

  <!-- Shows deploying code, running all tests, and running tests (1 of which fails), and logging. -->
  <target name="deployCodeFailingTest">
    <!-- Upload the contents of the "codepkg" package, running all tests -->
    <sf:deploy username="${sf.username}" password="${sf.password}" sessionId="${sf.sessionId}" serverurl="${sf.serverurl}" maxPoll="${sf.maxPoll}" deployRoot="codepkg" testLevel="RunAllTestsInOrg" rollbackOnError="true" logType="Debugonly"/>
  </target>

  <!-- Shows check only; never actually saves to the server -->
  <target name="deployCodeCheckOnly">
    <sf:deploy username="${sf.username}" password="${sf.password}" sessionId="${sf.sessionId}" serverurl="${sf.serverurl}" maxPoll="${sf.maxPoll}" deployRoot="codepkg" checkOnly="true"/>
  </target>

  <!-- Shows quick deployment of recent validation. Set the property sf.recentValidationId to your recent check only deployment Id -->
  <target name="quickDeploy">
    <sf:deployRecentValidation username="${sf.username}" password="${sf.password}" sessionId="${sf.sessionId}" serverurl="${sf.serverurl}" maxPoll="${sf.maxPoll}" recentValidationId="${sf.recentValidationId}"/>
  </target>

  <!-- Shows cancel deployment of deploy request either pending or in progress. Set property sf.requestId to Id of pending or in progress deploy request -->
  <target name="cancelDeploy">
    <sf:cancelDeploy username="${sf.username}" password="${sf.password}" sessionId="${sf.sessionId}" serverurl="${sf.serverurl}" maxPoll="${sf.maxPoll}" requestId="${sf.requestId}"/>
  </target>

  <!-- Retrieve the information of all items of a particular metadata type -->
  <target name="listMetadata">
    <sf:listMetadata username="${sf.username}" password="${sf.password}" sessionId="${sf.sessionId}" serverurl="${sf.serverurl}" metadataType="${sf.metadataType}"/>
  </target>

  <!-- Retrieve the information on all supported metadata type -->
  <target name="describeMetadata">
    <sf:describeMetadata username="${sf.username}" password="${sf.password}" sessionId="${sf.sessionId}" serverurl="${sf.serverurl}"/>
  </target>
</project>
